package control {		import com.greensock.TweenMax;	import com.greensock.easing.Quad;	import com.greensock.events.LoaderEvent;	import com.greensock.loading.SWFLoader;	import com.neriksworkshop.lib.ASaudio.Track;		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.system.ApplicationDomain;	import flash.system.Capabilities;	import flash.system.LoaderContext;	import flash.system.System;		import assets.FadeToBlackMC;		import events.ApplicationEvent;	import events.ViewEvent;		import model.DataModel;	import model.DefenderApplicationInfo;		import view.ApplicationView;	import view.IPageView;	import view.NavigationView;	import view.TitleScreenView;

	/**	 * @author Mark Grochowski	 */	public class ViewController2 	{		private var _mc : MovieClip;		private var _titleScreen:TitleScreenView;		private var _applicationScreen:ApplicationView;		private var _goViral:GoViralService;		private var _sectionHolder:Sprite;		private var _navigation:NavigationView;		private var _currentPage:IPageView;		private var _newPageClass:Class;		private var _randNum:int;		private var _introSound:Track;		private var _fade:FadeToBlackMC;		private var _swfLoader:SWFLoader;		private var _lc:LoaderContext;				public function ViewController2( mc : MovieClip )		{			_mc = mc;			//			TESTING!!!!!!!!!//			_mc.y = -140;						var myOS:String = Capabilities.os; 			var myOSLowerCase:String = myOS.toLowerCase();			if(myOSLowerCase.indexOf("ipad1,", 0) >= 0) {				DataModel.ipad1 = true;			} 						EventController.getInstance().addEventListener(ApplicationEvent.TITLE_DONE, showApplication);			EventController.getInstance().addEventListener(ApplicationEvent.APPLICATION_SUBMITTED, appSubmitted);			EventController.getInstance().addEventListener(ViewEvent.SHOW_PAGE, showPage);						//			_titleScreen = new TitleScreenView;//			_mc.addChild(_titleScreen);//			//			_introSound = new Track("assets/audio/intro.mp3");//			_introSound.start(true);//			_introSound.loop = true;						_sectionHolder = new Sprite(); 			_mc.addChild(_sectionHolder);						_navigation = new NavigationView();			_mc.addChild(_navigation);			TweenMax.to(_navigation, 0, {autoAlpha:0});						_fade = new FadeToBlackMC();			_mc.addChild(_fade);			TweenMax.to(_fade, 0, {autoAlpha:0});						// SKIP TO APPLICATION FOR TESTING!!!!//			showApplication(null);			//			!!!!!! IMPORTANT FOR RELEASE BUILD. OTHERWISE LOADEDS SWFS NO WORKEY//			_lc = new LoaderContext(false, ApplicationDomain.currentDomain, null); //			_lc.allowCodeImport = true;									testData();			//			addPage("joylessMountains.JoylessMountainsIntroView");			addPage("prologue.PrologueView");//			addPage("ApplicationView");								}				protected function showPage(event:ViewEvent):void		{			//fade the current one down first				TweenMax.to(_fade, 1, {autoAlpha:1, onComplete:addPage, onCompleteParams:[event.data.id]});			trace("showPage: "+event.data.id);		}								private function loadClassFromSWF(thisSWF:String):void {			if (_swfLoader) {				_swfLoader.dispose(true);				_swfLoader = null;			}						_lc = new LoaderContext(false, ApplicationDomain.currentDomain, null); 						_swfLoader = new SWFLoader("assets/swfs/"+thisSWF+".swf", {name:"loadedSWF", container:_sectionHolder, context:_lc,  onInit:initLoadedSWF}); 			_swfLoader.autoDispose = true;						//begin loading			_swfLoader.load(true);		}				private  function initLoadedSWF(event:LoaderEvent):void { //			//fade the swf in as soon as it inits//			TweenLite.from(event.target.content, 1, {alpha:0});//			//			//get a MovieClip named "phoneAnimation_mc" that's on the root of the subloaded swf//			var mc:DisplayObject = loader.getSWFChild("phoneAnimation_mc");//			//			//find the "com.greensock.TweenLite" class that's inside the subloaded swf//			var tweenClass:Class = loader.getClass("com.greensock.TweenLite");						_newPageClass = _swfLoader.rawContent.getMyClass();			trace("_newPageClass: "+_newPageClass);			_currentPage = new _newPageClass();			trace("intiLoadedSWF _currentPage: "+_currentPage);						MovieClip(_currentPage).addEventListener(Event.ADDED_TO_STAGE, newPageOn);			_sectionHolder.addChild(MovieClip(_currentPage));		}				protected function appSubmitted(event:ApplicationEvent):void
		{			if (_introSound) {				_introSound.stop(true);				_introSound = null;			}						var infObj:Object = event.data as Object;						DataModel.defenderInfo.defender = infObj.defender;			DataModel.defenderInfo.age = infObj.age;			DataModel.defenderInfo.hair = infObj.hair;			DataModel.defenderInfo.beverage = infObj.beverage;			DataModel.defenderInfo.gender = infObj.gender;			DataModel.defenderInfo.romantic = infObj.romantic;			DataModel.defenderInfo.companion = infObj.companion;			DataModel.defenderInfo.weapon = infObj.weapon;			DataModel.defenderInfo.instrument = infObj.instrument;			DataModel.defenderInfo.wardrobe = infObj.wardrobe;
			DataModel.defenderInfo.contact = infObj.contact;			DataModel.defenderInfo.contactGender = int(infObj.contactGender);			DataModel.defenderInfo.applicationDate = new Date();						// TESTING !!!!!!			if (infObj.defender == "") {				testData();			}						if (DataModel.defenderInfo.gender == 2) {				// assign either male of female if undecided				_randNum = Math.round(DataModel.getInstance().randomRange(0,1));				DataModel.defenderInfo.gender = _randNum;			}			if (DataModel.defenderInfo.romantic == 2) {				// assign either male of female if undecided				_randNum = Math.round(DataModel.getInstance().randomRange(0,1));				DataModel.defenderInfo.romantic = _randNum;			}						if (_applicationScreen) {				TweenMax.to(_applicationScreen, 1, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:showPrologue});			} else {				TweenMax.to(_currentPage, 1, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:showPrologue});			}			
//			TweenMax.to(_applicationScreen, 0, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:addPage, onCompleteParams:["theCattery.MouseConsultationView"]});
//			TweenMax.to(_applicationScreen, 0, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:addPage, onCompleteParams:["joylessMountains.JoylessMountainsIntroView"]});
		}				private function testData():void {			if (!DataModel.defenderInfo) {				DataModel.defenderInfo = new DefenderApplicationInfo();			}//			DataModel.defenderInfo.defender = "Sarah";			DataModel.defenderInfo.defender = "Martha Mary Marlene May";			DataModel.defenderInfo.age = "30";			DataModel.defenderInfo.hair = "blond";			DataModel.defenderInfo.beverage = "Pinot Grigio";			DataModel.defenderInfo.gender = 1;			DataModel.defenderInfo.romantic = 0;			DataModel.defenderInfo.companion = 0;			DataModel.defenderInfo.weapon = 2;			DataModel.defenderInfo.instrument = 2;			DataModel.defenderInfo.wardrobe = 0;			DataModel.defenderInfo.contact = "Millicent";			//				DataModel.defenderInfo.contactFBID = "100004309001809";			DataModel.defenderInfo.contactFBID = null;			DataModel.defenderInfo.contactGender = 0;			DataModel.defenderInfo.applicationDate = new Date();		}				protected function showApplication(event:ApplicationEvent):void
		{			EventController.getInstance().removeEventListener(ApplicationEvent.TITLE_DONE, showApplication);			
			if (_titleScreen) {				_titleScreen.destroy();				_mc.removeChild(_titleScreen);			}			_applicationScreen = new ApplicationView();			_mc.addChild(_applicationScreen);			DataModel.defenderInfo = new DefenderApplicationInfo();		}					private function showPrologue() : void {			if (_applicationScreen) {				_applicationScreen.destroy();				_mc.removeChild(_applicationScreen);				_applicationScreen = null;			}						addPage("prologue.PrologueView");			//			TweenMax.to(_navigation, 0, {autoAlpha:1});//			TweenMax.from(_navigation, 1, {y:-100, ease:Quad.easeInOut});		}						private function removeCurrentPage() : void {			if (_applicationScreen) {				_applicationScreen.destroy();				_mc.removeChild(_applicationScreen);				_applicationScreen = null;			}						if (_currentPage != null) {				_currentPage.destroy();				_sectionHolder.removeChild(MovieClip(_currentPage));				_currentPage = null;				_newPageClass = null;			}					}		private function addPage(thisPage:String, thisPackage:String = "view.") : void {						removeCurrentPage();						//!GARBAGE COLLECT			System.gc();						if (thisPage == "theCattery.BopMiceView" || thisPage == "bopMice.BopMice") {				_mc.stage.frameRate = DataModel.BOP_MICE_FPS;			} else {				_mc.stage.frameRate = 60;			}						loadClassFromSWF(thisPage);			//			_newPageClass = getDefinitionByName(thisPackage+thisPage) as Class;//			//			_currentPage = new _newPageClass();//			MovieClip(_currentPage).addEventListener(Event.ADDED_TO_STAGE, newPageOn);//			_sectionHolder.addChild(MovieClip(_currentPage));		}				protected function newPageOn(event:Event):void
		{			MovieClip(_currentPage).removeEventListener(Event.ADDED_TO_STAGE, newPageOn);			TweenMax.to(_fade, 1, {autoAlpha:0, onComplete:pageIn, delay:0});//			TweenMax.to(_sectionHolder, 1, {autoAlpha:1, onComplete:pageIn});//			pageIn();
		}				private function pageIn():void {			EventController.getInstance().dispatchEvent(new ViewEvent(ViewEvent.PAGE_ON));		}			}}