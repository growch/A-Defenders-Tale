package control {		import com.greensock.TweenMax;	import com.greensock.easing.Quad;	import com.neriksworkshop.lib.ASaudio.Track;		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.system.Capabilities;	import flash.system.System;	import flash.utils.getDefinitionByName;		import assets.FadeToBlackMC;		import events.ApplicationEvent;	import events.ViewEvent;		import model.DataModel;	import model.DefenderApplicationInfo;		import view.ApplicationView;	import view.IPageView;	import view.NavigationView;	import view.TitleScreenView;	import view.prologue.DocksView;	import view.prologue.PrologueView;	import view.sandlands.FindWizardView;	import view.sandlands.HutView;	import view.sandlands.Sand2View;	import view.sandlands.Sand3View;	import view.sandlands.SandView;	import view.sandlands.Well2View;	import view.sandlands.Well3View;	import view.sandlands.Well4View;	import view.sandlands.WellView;

	/**	 * @author Mark Grochowski	 */	public class ViewController 	{		private var _mc : MovieClip;		private var _titleScreen:TitleScreenView;		private var _applicationScreen:ApplicationView;		private var _prologueScreen:PrologueView;		private var _goViral:GoViralService;		private var _docksScreen:DocksView;		private var _sectionHolder:Sprite;		private var _navigation:NavigationView;//		private var _jellyfishGame:JellyfishGameView;		private var _currentPage:IPageView;		private var _newPageClass:Class;		//HACK - this is to force the compiler to include these clases into the build;//		private var classArray:Array = [DocksView,Coin1View, Coin2View, Coin3View, Coin4View, Coin5View, Coin6View, Coin7View, //			StealView, NegotiateView, SuppliesView, TravelerView, Cellar1View, Cellar2View, TruthView, BoatIntroView, BoatView,//			BelowDeckView, MapView, CrossSeaView, SeaMonsterView, ReasonView, FightView, IntroAllIslandsView, Island1View,//			CatRanchShoreView, CatlingAffairsView, BallView, FourthDoorView, RendezvousView, NoTrespassingView, FollowView, //			ScratchEarsView, MouseConsultationView, BopMiceView, GameLostView, GameWonView, ThirdDoorView, AcceptOfferView,//			RefuseOfferView, PrivateAudienceView, ReturnToBoatView, LingerView, BopMice, JoylessMountainsIntroView, Climb1View, //			Climb2View, Climb3View, CaveView, ElevatorView, TreasureView, Climb4View, Escalator1View, ExploreView, PicnicView,//			Escalator2View, RallyView, METS4EvaView, Platform3View, RosesView, Platform4View, SnowmonchView, StealStoneView,//			AwakenSerpentView, Impatience1View, DinnerView, Impatience2View, TalkView, Impatience3View, PlaySongView,//			PlayRiddlesView, StoneView, ShipwreckCoveView, SmegView, CaptainView, SandlandsView];//		private var classArray:Array = [CatRanchShoreView];		//!!!!! having all the classes above was causing app to crash!!!!!		//TODO ONLY ADD CLASSES TO MEMORY AS NEEDED		private var _randNum:int;		private var _introSound:Track;		private var _fade:FadeToBlackMC;				public function ViewController( mc : MovieClip )		{			_mc = mc;			//			TESTING!!!!!!!!!//			_mc.y = -140;						var myOS:String = Capabilities.os; 			var myOSLowerCase:String = myOS.toLowerCase();			if(myOSLowerCase.indexOf("ipad1,", 0) >= 0) {				DataModel.ipad1 = true;			} 						EventController.getInstance().addEventListener(ApplicationEvent.TITLE_DONE, showApplication);			EventController.getInstance().addEventListener(ApplicationEvent.APPLICATION_SUBMITTED, appSubmitted);			EventController.getInstance().addEventListener(ViewEvent.SHOW_PAGE, showPage);						// !!!! FOR TRANSITIONS OR GAMES, CONSIDER CHANGING FRAME RATE????//			_mc.stage.frameRate = 48;			//			_titleScreen = new TitleScreenView;//			_mc.addChild(_titleScreen);//			//			_introSound = new Track("assets/audio/intro.mp3");//			_introSound.start(true);//			_introSound.loop = true;						_sectionHolder = new Sprite(); 			_mc.addChild(_sectionHolder);						_navigation = new NavigationView();			_mc.addChild(_navigation);			TweenMax.to(_navigation, 0, {autoAlpha:0});						_fade = new FadeToBlackMC();			_mc.addChild(_fade);			TweenMax.to(_fade, 0, {autoAlpha:0});						// SKIP TO APPLICATION FOR TESTING!!!!//			showApplication(null);						//TESTING BOP MICE!!!!!//			addPage("bopMice.BopMice", "games.");//			addPage("theCattery.BopMiceView");						testData();//			addPage("joylessMountains.ExploreView");//			addPage("joylessMountains.JoylessMountainsIntroView");			//			CatRanchShoreView//			addPage("theCattery.CatRanchShoreView");			//			MapView//			addPage("MapView");			HutView			addPage("sandlands.HutView");			//			addPage("prologue.StealView");//			addPage("prologue.coins.Coin6View");			//			addPage("theCattery.BopMiceView");			//			addPage("shipwreck.CaptainView");			//			addPage("sandlands.SandlandsView");								}						protected function showPage(event:ViewEvent):void
		{
			//			TweenMax.to(_sectionHolder, 1, {autoAlpha:0, onComplete:addPage, onCompleteParams:[event.data.id]});			TweenMax.to(_fade, 1, {autoAlpha:1, onComplete:addPage, onCompleteParams:[event.data.id]});//			addPage(event.data.id);
		}						protected function appSubmitted(event:ApplicationEvent):void
		{			if (_introSound) {				_introSound.stop(true);				_introSound = null;			}						var infObj:Object = event.data as Object;						DataModel.defenderInfo.defender = infObj.defender;			DataModel.defenderInfo.age = infObj.age;			DataModel.defenderInfo.hair = infObj.hair;			DataModel.defenderInfo.beverage = infObj.beverage;			DataModel.defenderInfo.gender = infObj.gender;			DataModel.defenderInfo.romantic = infObj.romantic;			DataModel.defenderInfo.companion = infObj.companion;			DataModel.defenderInfo.weapon = infObj.weapon;			DataModel.defenderInfo.instrument = infObj.instrument;			DataModel.defenderInfo.wardrobe = infObj.wardrobe;
			DataModel.defenderInfo.contact = infObj.contact;			DataModel.defenderInfo.contactGender = int(infObj.contactGender);			DataModel.defenderInfo.applicationDate = new Date();						// TESTING !!!!!!			if (infObj.defender == "") {				testData();			}						if (DataModel.defenderInfo.gender == 2) {				// assign either male of female if undecided				_randNum = Math.round(DataModel.getInstance().randomRange(0,1));				DataModel.defenderInfo.gender = _randNum;			}			if (DataModel.defenderInfo.romantic == 2) {				// assign either male of female if undecided				_randNum = Math.round(DataModel.getInstance().randomRange(0,1));				DataModel.defenderInfo.romantic = _randNum;			}						TweenMax.to(_applicationScreen, 1, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:showPrologue});
//			TweenMax.to(_applicationScreen, 0, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:addPage, onCompleteParams:["theCattery.MouseConsultationView"]});
//			TweenMax.to(_applicationScreen, 0, {y:-DataModel.APP_HEIGHT, ease:Quad.easeInOut, onComplete:addPage, onCompleteParams:["joylessMountains.JoylessMountainsIntroView"]});
		}				private function testData():void {			if (!DataModel.defenderInfo) {				DataModel.defenderInfo = new DefenderApplicationInfo();			}			DataModel.defenderInfo.defender = "Sarah";//			DataModel.defenderInfo.defender = "Martha Mary Marlene May";			DataModel.defenderInfo.age = "30";			DataModel.defenderInfo.hair = "blond";			DataModel.defenderInfo.beverage = "Pinot Grigio";			DataModel.defenderInfo.gender = 1;			DataModel.defenderInfo.romantic = 0;			DataModel.defenderInfo.companion = 0;			DataModel.defenderInfo.weapon = 1;			DataModel.defenderInfo.instrument = 2;			DataModel.defenderInfo.wardrobe = 0;			DataModel.defenderInfo.contact = "Millicent";			//				DataModel.defenderInfo.contactFBID = "100004309001809";			DataModel.defenderInfo.contactFBID = null;			DataModel.defenderInfo.contactGender = 0;			DataModel.defenderInfo.applicationDate = new Date();		}				protected function showApplication(event:ApplicationEvent):void
		{			EventController.getInstance().removeEventListener(ApplicationEvent.TITLE_DONE, showApplication);			
			if (_titleScreen) {				_titleScreen.destroy();				_mc.removeChild(_titleScreen);			}			_applicationScreen = new ApplicationView();			_mc.addChild(_applicationScreen);			DataModel.defenderInfo = new DefenderApplicationInfo();		}					private function showPrologue() : void {			if (_applicationScreen) {				_applicationScreen.destroy();				_mc.removeChild(_applicationScreen);				_applicationScreen = null;			}			_currentPage = new PrologueView();			_sectionHolder.addChild(MovieClip(_currentPage));						TweenMax.from(_sectionHolder, 1, {autoAlpha:0, onComplete:pageIn});			//			TweenMax.to(_navigation, 0, {autoAlpha:1});//			TweenMax.from(_navigation, 1, {y:-100, ease:Quad.easeInOut});		}						private function removeCurrentPage() : void {			if (_applicationScreen) {				_applicationScreen.destroy();				_mc.removeChild(_applicationScreen);				_applicationScreen = null;			}						if (_currentPage != null) {				_currentPage.destroy();				_sectionHolder.removeChild(MovieClip(_currentPage));				_currentPage = null;			}					}		private function addPage(thisPage:String, thisPackage:String = "view.") : void {						removeCurrentPage();						//!GARBAGE COLLECT			System.gc();			//			trace("addPage: "+thisPage);//			trace("still in memory? CatlingAffairsView: "+CatlingAffairsView);						if (thisPage == "theCattery.BopMiceView" || thisPage == "bopMice.BopMice") {				_mc.stage.frameRate = DataModel.BOP_MICE_FPS;			} else {				_mc.stage.frameRate = 60;			}						_newPageClass = getDefinitionByName(thisPackage+thisPage) as Class;									_currentPage = new _newPageClass();			MovieClip(_currentPage).addEventListener(Event.ADDED_TO_STAGE, newPageOn);			_sectionHolder.addChild(MovieClip(_currentPage));		}		//		private function delayedPage():void {//			_sectionHolder.addChild(MovieClip(_currentPage));//		}//				protected function newPageOn(event:Event):void
		{//			trace("NEW PAGE ON@@@@@");
			MovieClip(_currentPage).removeEventListener(Event.ADDED_TO_STAGE, newPageOn);			TweenMax.to(_fade, 1, {autoAlpha:0, onComplete:pageIn, delay:0});//			TweenMax.to(_sectionHolder, 1, {autoAlpha:1, onComplete:pageIn});//			pageIn();
		}				private function pageIn():void {			EventController.getInstance().dispatchEvent(new ViewEvent(ViewEvent.PAGE_ON));		}			}}