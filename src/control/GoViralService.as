package  control{	import com.milkmangames.nativeextensions.GVFacebookFriend;	import com.milkmangames.nativeextensions.GVHttpMethod;	import com.milkmangames.nativeextensions.GVSocialServiceType;	import com.milkmangames.nativeextensions.GoViral;	import com.milkmangames.nativeextensions.events.GVFacebookEvent;	import com.milkmangames.nativeextensions.events.GVShareEvent;	import com.milkmangames.nativeextensions.events.GVTwitterEvent;		import flash.display.BitmapData;	import flash.display.GradientType;	import flash.display.Sprite;	import flash.filters.DropShadowFilter;	import flash.geom.Matrix;	import flash.text.TextField;	import flash.text.TextFormat;		import events.ViewEvent;
		/** GoViralExample App */	public class GoViralService extends Sprite	{		//		// Definitions		//				/** CHANGE 'YOUR::APP_ID' TO YOUR FACEBOOK APP ID in quotes! */		//public static const FACEBOOK_APP_ID:String="12345678900";		public static const FACEBOOK_APP_ID:String="351887674885054";				public var isSupported:Boolean;				//		// Instance Variables		//					/** My Profile */		private var myProfile:GVFacebookFriend;				//		// Public Methods		//				/** Create New GoViralExample */		public function GoViralService() 		{					log("Started GoViral Example.");			init();					}						/** Init */		public function init():void		{			// check if GoViral is supported on the machine currently running it			if (!GoViral.isSupported())			{				log("Extension is not supported on this platform.");				return;			}						GoViral.create();						log("GoViral Extension Initialized: "+GoViral.VERSION);						// initialize facebook.					// this is to make sure you remembered to put in your app ID !			if (FACEBOOK_APP_ID=="YOUR_FACEBOOK_APP_ID")			{				log("You forgot to put in Facebook ID!");			}			else			{				if (!GoViral.goViral.isFacebookSupported())				{					log("Sorry, this device does not support Facebook with Adobe AIR.  You can get around this by compiling on a mac with instructions from https://bugbase.adobe.com/index.cfm?event=bug&id=3686856");				}				else				{					log("Initializing facebook...");					GoViral.goViral.initFacebook(FACEBOOK_APP_ID, "");					log("Facebook Initialized! GoViral v"+GoViral.VERSION+"/"+GoViral.goViral.isFacebookAuthenticated());				}			}									// set up all the event listeners.			// you only need the ones for the services you want to use.						// facebook events			GoViral.goViral.addEventListener(GVFacebookEvent.FB_LOGGED_IN,onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_LOGGED_OUT,onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_LOGIN_CANCELED,onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_LOGIN_FAILED,onFacebookEvent);						// facebook events for manually updating permissions			GoViral.goViral.addEventListener(GVFacebookEvent.FB_READ_PERMISSIONS_UPDATED, onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_PUBLISH_PERMISSIONS_UPDATED, onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_READ_PERMISSIONS_FAILED, onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_PUBLISH_PERMISSIONS_FAILED, onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_PERMISSIONS_REFRESHED, onFacebookEvent);			GoViral.goViral.addEventListener(GVFacebookEvent.FB_PERMISSIONS_REFRESH_FAILED, onFacebookEvent);						// facebook event for incoming App Invites			GoViral.goViral.addEventListener(GVFacebookEvent.FB_APP_INVITE_OPENED, onFacebookEvent);					}				// Examples of using Facebook methods				/** Login to facebook */		public function loginFacebook():void		{			log("Login with facebook...");			if(!GoViral.goViral.isFacebookAuthenticated())			{				GoViral.goViral.authenticateWithFacebook("public_profile");								log("Waiting for login response...");			}			else			{				log("done (already authenticated)");			}					}				/** Request New Read Permissions */		private function requestNewReadPermissions():void		{			var newPerms:String="user_friends";			log("Requesting new permission '"+newPerms+"'...");			GoViral.goViral.requestNewFacebookReadPermissions(newPerms);		}				/** Request New Publish Permissions */		private function requestNewPublishPermissions():void		{			var newPerms:String="publish_actions";			log("Requesting new permission '"+newPerms+"'...");			GoViral.goViral.requestNewFacebookPublishPermissions(newPerms);		}				/** Refresh Session Permissions */		private function refreshSessionPermissions():void		{			log("Refreshing session permissions...");			GoViral.goViral.refreshFacebookSessionPermissions();		}				/** Logout of facebook */		private function logoutFacebook():void		{			log("logout facebook.");			GoViral.goViral.logoutFacebook();		}						/** Share an Open Graph Object with the native Open Graph Action Dialog */		private function facebookOpenGraphDialog():void		{			var bitmapData:BitmapData=getOrCreateBitmapData();								log("Submitting graph action dialog.....");								GoViral.goViral.showFacebookGraphDialog(				"mmg_goviral:test_action", 				"mmg_goviral:test_object", 				"Graph Action Title", 				"Graph Action Description",				"https://www.milkmanplugins.com", 				bitmapData).addDialogListener(function(e:GVFacebookEvent):void {					switch(e.type)					{						case GVFacebookEvent.FB_DIALOG_CANCELED:							log("The Graph Dialog was canceled.");							break;						case GVFacebookEvent.FB_DIALOG_FAILED:							log("The Graph Dialog has failed:"+e.errorMessage);							break;						case GVFacebookEvent.FB_DIALOG_FINISHED:							log("Successfully posted to graph dialog:"+e.jsonData);							break;					}				});		}				/** Share with the Native FacebookShare Dialog */		private function facebookShareDialog():void		{						GoViral.goViral.showFacebookShareDialog(				"Posting from GoViral v5", 				"This is the description. ", 				"https://www.milkmanplugins.com",				"http://www.milkmangames.com/gvremoteimage.jpg").addDialogListener(function(e:GVFacebookEvent):void {					switch(e.type)					{						case GVFacebookEvent.FB_DIALOG_CANCELED:							log("The Share Dialog was canceled.");							break;						case GVFacebookEvent.FB_DIALOG_FAILED:							log("The Share Dialog has failed:"+e.errorMessage);							break;						case GVFacebookEvent.FB_DIALOG_FINISHED:							log("Successfully posted to share dialog:"+e.jsonData);							break;					}				});					}						/** Get a list of all your facebook friends */		public function getFriendsFacebook():void		{			log("getting friends with app...");						GoViral.goViral.requestFacebookFriends().addRequestListener(function(e:GVFacebookEvent):void {				if (e.type==GVFacebookEvent.FB_REQUEST_RESPONSE)				{					var allFriends:String="";					var friendsVector:Vector.<GVFacebookFriend> = new Vector.<GVFacebookFriend>();					for each(var friend:GVFacebookFriend in e.friends)					{						allFriends+=","+friend.name;						friendsVector.push(friend);					}										log(e.graphPath+"-= ("+e.friends.length+")="+allFriends+",json="+e.jsonData);										EventController.getInstance().dispatchEvent(new ViewEvent(ViewEvent.FACEBOOK_DEFENDER_FRIENDS, friendsVector));				}				else				{					log("The friends request failed:"+e.errorMessage);				}			});					}				/** Get your own facebook profile */		public function getMeFacebook():void		{			log("Getting profile...");						GoViral.goViral.requestMyFacebookProfile().addRequestListener(function(e:GVFacebookEvent):void {				if (e.type==GVFacebookEvent.FB_REQUEST_RESPONSE)				{					var myProfile:GVFacebookFriend=e.friends[0];					log("My Profile: "+myProfile.id+						", name='"+myProfile.name+						"',gender='"+myProfile.gender+						"',bio='"+myProfile.bio+"'");										this.myProfile=myProfile;					EventController.getInstance().dispatchEvent(new ViewEvent(ViewEvent.FACEBOOK_DEFENDER_INFO, myProfile));				}				else				{					log("profile failed:"+e.errorMessage);				}			});		}				/** Get Facebook Access Token */		private function getFacebookToken():void		{			log("Retrieving access token...");						var accessToken:String=GoViral.goViral.getFbAccessToken();			var accessExpiry:Number=GoViral.goViral.getFbAccessExpiry();			var expiryDate:Date=new Date();			expiryDate.setTime(accessExpiry);			expiryDate=(accessExpiry==0)?null:expiryDate;						log("auth is:"+GoViral.goViral.isFacebookAuthenticated()+",expiry:"+accessExpiry+"("+expiryDate+"),token: "+accessToken);		}						/** Test what happens when a graph request fails */		private function testFailingGraphRequest():void		{			log("Starting a bad test request...");			GoViral.goViral.facebookGraphRequest("me/bananas").addRequestListener(function(e:GVFacebookEvent):void {				if (e.type==GVFacebookEvent.FB_REQUEST_RESPONSE)				{					log("Test request success, uhoh! "+e.jsonData);				}				else				{					log("Bad Request error: "+e.errorMessage);				}			});					}						/** Make a post graph request */		private function postGraphFacebook():void		{					// here we send a post directly to the feed without user interaction.			var params:Object={};			params.name="Name Test";			params.caption="Caption Test";			params.link="https://www.milkmanplugins.com";						GoViral.goViral.facebookGraphRequest(				"me/feed",				GVHttpMethod.POST,				params,				"publish_actions").addRequestListener(function(e:GVFacebookEvent):void {					if (e.type==GVFacebookEvent.FB_REQUEST_RESPONSE)					{						log("Successfully posted to feed: "+e.jsonData);					}					else					{						log("An error occurred posting : "+e.errorMessage);					}				});					}				/** Show a facebook game request dialog */		private function gameRequestFacebook():void		{			log("inviting friends..");									GoViral.goViral.showFacebookGameRequestDialog(				"Play my game",				"Play this game with me!").addDialogListener(function(e:GVFacebookEvent):void {					switch(e.type)					{						case GVFacebookEvent.FB_DIALOG_CANCELED:							log("The Invite Dialog was canceled.");							break;						case GVFacebookEvent.FB_DIALOG_FAILED:							log("The Invite Dialog has failed:"+e.errorMessage);							break;						case GVFacebookEvent.FB_DIALOG_FINISHED:							log("Successfully invited friends dialog:"+e.jsonData);							if(e.data.to)							{								log("Invited these people :"+e.data.to.join(","));							}							break;					}				});		}				/** Post a photo to the facebook stream */		private function postPhotoFacebook():void		{			log("post facebook photo...");			var bitmapData:BitmapData=getOrCreateBitmapData();						GoViral.goViral.facebookPostPhoto("posted from AIR sdk", bitmapData).addRequestListener(function(e:GVFacebookEvent):void {				if (e.type==GVFacebookEvent.FB_REQUEST_RESPONSE)				{					log("Posted photo! "+e.jsonData);				}				else				{					log("Photo request failed:"+e.errorMessage);				}			});		}					/** Show Page or Profile */		private function showPageOrProfile():void		{			log("Showing page...");			GoViral.goViral.presentFacebookPageOrProfile("215322531827565");			log("Did show page.");		}				/** Get Facebook AD ID */		private function getFacebookMobileAdID():void		{			log("Getting mobile ad id...");			GoViral.goViral.requestFacebookMobileAdID().addAdIdListener(function(e:GVFacebookEvent):void {				log("Facebook ad id result:"+e.facebookMobileAdId);			});				}				/** Check you're logged in to facebook before doing anything else. */		private function checkLoggedInFacebook():Boolean		{			// make sure you're logged in first			if (!GoViral.goViral.isFacebookAuthenticated())			{				log("Not logged in!");				return false;			}			return true;					}						//		// Social Composer				/** Social Composer Facebook */		public function socialComposerFacebook():void		{			log("Check availability...");			if (!GoViral.goViral.isSocialServiceAvailable(GVSocialServiceType.FACEBOOK))			{				log("Facebook service not available.");				return;							}						var bitmapData:BitmapData=getOrCreateBitmapData();						log("Showing composer...");			GoViral.goViral.displaySocialComposerView(				GVSocialServiceType.FACEBOOK, 				"Hello facebook!",				bitmapData, 				"https://www.milkmanplugins.com").addDialogListener(function(e:GVShareEvent):void {					switch(e.type)					{						case GVShareEvent.SOCIAL_COMPOSER_FINISHED:							log("Facebook composer finished!");							break;						case GVShareEvent.SOCIAL_COMPOSER_CANCELED:							log("Facebook composer canceled.");							break;					}				});			log("did show Facebook composer.");		}				/** Social Composer Twitter */		public function socialComposerTwitter():void		{			log("Check availability...");			if (!GoViral.goViral.isSocialServiceAvailable(GVSocialServiceType.TWITTER))			{				log("Twitter service not available.");				return;			}						var bitmapData:BitmapData=getOrCreateBitmapData();						log("Showing composer...");			GoViral.goViral.displaySocialComposerView(				GVSocialServiceType.TWITTER, 				"Hello twitter with pic!", 				bitmapData, 				"https://www.milkmanplugins.com").addDialogListener(function(e:GVShareEvent):void {					switch(e.type)					{						case GVShareEvent.SOCIAL_COMPOSER_FINISHED:							log("Twitter composer finished!");							break;						case GVShareEvent.SOCIAL_COMPOSER_CANCELED:							log("Twitter composer canceled.");							break;					}				});			log("did show Twitter composer.");		}										//		// Generic Sharing		//				/** Send Generic Message */		public function sendGenericMessage():void		{			if (!GoViral.goViral.isGenericShareAvailable())			{				log("Generic share doesn't work on this platform.");				return;			}									log("Sending generic share intent...");			GoViral.goViral.shareGenericMessage(				"The Subject",				"The message!",				false,				350,				512).addDialogListener(function(e:GVShareEvent):void {					log("Generic share completed.");				});						log("Did send generic share intent.");		}				/** Send Generic Message */		public function sendGenericMessageWithImage():void		{			if (!GoViral.goViral.isGenericShareAvailable())			{				log("Generic share doesn't work on this platform.");				return;			}						log("Sending generic share img intent...");			var bitmapData:BitmapData=getOrCreateBitmapData();			GoViral.goViral.shareGenericMessageWithImage(				"The Subject",				"The message!",				false,				bitmapData).addDialogListener(function(e:GVShareEvent):void {					log("Generic share with image completed.");				});						log("Did send generic share img intent.");		}					//		// twitter		//				/** Post a status message to Twitter */		public function postTwitter():void		{			log("posting to twitter.");						if (GoViral.goViral.isTweetSheetAvailable())			{				GoViral.goViral.showTweetSheet("This is a native twitter post!").addDialogListener(function(e:GVTwitterEvent):void {					switch(e.type)					{						case GVTwitterEvent.TW_DIALOG_FINISHED:							log("Twitter dialog finished.");							break;						case GVTwitterEvent.TW_DIALOG_FAILED:							log("Twitter dialog failed.");							break;						case GVTwitterEvent.TW_DIALOG_CANCELED:							log("Twitter dialog canceled.");							break;					}				});				log("Waiting for Twitter response...");			}			else			{				log("twitter not available>");				return;			}			log("done show tweet.");		}				/** Post a picture to twitter */		public function postTwitterPic():void		{			log("post twitter pic...");						if (GoViral.goViral.isTweetSheetAvailable())			{				var bitmapData:BitmapData=getOrCreateBitmapData();				GoViral.goViral.showTweetSheetWithImage(					"This is a twitter post with a pic!",					bitmapData).addDialogListener(function(e:GVTwitterEvent):void {						switch(e.type)						{							case GVTwitterEvent.TW_DIALOG_FINISHED:								log("Twitter dialog finished.");								break;							case GVTwitterEvent.TW_DIALOG_FAILED:								log("Twitter dialog failed.");								break;							case GVTwitterEvent.TW_DIALOG_CANCELED:								log("Twitter dialog canceled.");								break;						}					});				log("Waiting for Twitter response...");			}			else			{				log("Twitter not available.");				return;			}				}				/** Show a Twitter Profile */		private function presentTwitterProfile():void		{			log("Showing 'milkmangames' twitter profile...");			GoViral.goViral.presentTwitterProfile("milkmangames");			log("Showed twitter profile.");		}				//		// Events		//				/** Handle Facebook Event */		private function onFacebookEvent(e:GVFacebookEvent):void		{			switch(e.type)			{				case GVFacebookEvent.FB_LOGGED_IN:					log("Logged in to facebook:"+GoViral.VERSION+						",denied: ["+GoViral.goViral.getDeclinedFacebookPermissions()+						"], user_friends permission?"+GoViral.goViral.isFacebookPermissionGranted("user_friends"));					break;								case GVFacebookEvent.FB_LOGGED_OUT:					logStatus("[..Logged out of facebook.]");					break;								case GVFacebookEvent.FB_LOGIN_CANCELED:					log("Canceled facebook login.");					break;								case GVFacebookEvent.FB_LOGIN_FAILED:					log("Login failed:"+e.errorMessage+",sn?"+e.shouldNotifyFacebookUser+", code?"+e.errorCode);					break;								case GVFacebookEvent.FB_PUBLISH_PERMISSIONS_FAILED:				case GVFacebookEvent.FB_READ_PERMISSIONS_FAILED:					log("perms failed:"+e.errorMessage+",sn?"+e.shouldNotifyFacebookUser+",code?"+e.errorCode+","+e.permissions+", uf="+GoViral.goViral.isFacebookPermissionGranted("user_friends"));					break;								case GVFacebookEvent.FB_READ_PERMISSIONS_UPDATED:				case GVFacebookEvent.FB_PUBLISH_PERMISSIONS_UPDATED:					log("Perms updated:"+e.permissions+", uf="+GoViral.goViral.isFacebookPermissionGranted("user_friends"));					break;								case GVFacebookEvent.FB_PERMISSIONS_REFRESHED:					log("Perms refreshed, now:"+e.permissions+",uf="+GoViral.goViral.isFacebookPermissionGranted("user_friends"));					break;								case GVFacebookEvent.FB_PERMISSIONS_REFRESH_FAILED:					log("Refresh permission failed:"+e.errorMessage+",sn?"+e.shouldNotifyFacebookUser+",code?"+e.errorCode+","+e.permissions+", uf="+GoViral.goViral.isFacebookPermissionGranted("user_friends"));					break;				case GVFacebookEvent.FB_APP_INVITE_OPENED:					log("App Invite OPENED! :"+e.appInviteURL);					break;			}		}					//		// Impelementation		// Code below creates the UI for the test harness.		//				/** Log */		private function log(msg:String):void		{			trace("[GoViralExample] "+msg);		}								private function logStatus(msg:String):void		{		}												/** Get or Create BitmapData */		/** Get or Create BitmapData */		private var myBitmapData:BitmapData;				private function getOrCreateBitmapData():BitmapData		{			if (myBitmapData!=null)			{				return myBitmapData;			}						var canvas:Sprite=new Sprite();			var matrix:Matrix=new Matrix();			matrix.createGradientBox(1000, 750, Math.PI*.5, 0, 0);			canvas.graphics.lineStyle(7, 0x171717);			canvas.graphics.beginGradientFill(GradientType.LINEAR, [0x626262,0x232323,0], [1,1, 1], [0, 100, 255],matrix);			canvas.graphics.drawRoundRect(4, 4, 952, 632,90,90);			canvas.graphics.endFill();						canvas.graphics.beginGradientFill(GradientType.LINEAR, [0xffffff, 0x333333], [1, 1], [0, 255], matrix);			canvas.graphics.drawCircle(480, 320, 200);			canvas.graphics.endFill();						canvas.graphics.beginGradientFill(GradientType.LINEAR, [0xC83F37, 0x6B1414], [1, 1], [0, 255], matrix);			canvas.graphics.drawCircle(480, 320, 80);			canvas.graphics.endFill();						var txtLabel:TextField=new TextField();			txtLabel.defaultTextFormat=new TextFormat("Arial", 42, 0xffffff,true,false,false,null,null,"center");			txtLabel.text="This bitmap image was posted by an automated test with the GoViral Native Extension API for Adobe AIR from www.milkmanplugins.com";			txtLabel.filters=[new DropShadowFilter(2, 45, 0, 1, 4, 4, 1, 4, false, false)];						txtLabel.width=960;			txtLabel.height=640;			txtLabel.multiline=true;			txtLabel.wordWrap=true;			txtLabel.x=canvas.width*.5-txtLabel.width*.5;			txtLabel.y=canvas.height*.35;			canvas.addChild(txtLabel);						myBitmapData=new BitmapData(960, 640, false, 0xffffffff);			myBitmapData.draw(canvas);			return myBitmapData;		}					public function postFacebookWall(title:String, caption:String, msg:String):void
		{
			// TODO Auto Generated method stub
			
		}	}}